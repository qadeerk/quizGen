[{"question": {"id": 0, "value": "What does Object-Oriented Programming (OOP) focus on in software design?"}, "options": [{"index": 0, "value": "OOP focuses on organizing software design around data or objects."}, {"index": 1, "value": "OOP is primarily concerned with optimizing code for performance."}, {"index": 2, "value": "OOP emphasizes the use of global variables in programming."}, {"index": 3, "value": "OOP focuses on organizing software design around functions and procedures."}], "answerIndex": 0}, {"question": {"id": 1, "value": "What are the key principles of Object-Oriented Programming (OOP)?"}, "options": [{"index": 0, "value": "Functional programming, procedural programming, scripting, and markup"}, {"index": 1, "value": "Encapsulation, inheritance, polymorphism, and abstraction."}, {"index": 2, "value": "Data structures, algorithms, syntax, and semantics"}, {"index": 3, "value": "Modularity, concurrency, recursion, and iteration"}], "answerIndex": 1}, {"question": {"id": 2, "value": "What are the main benefits of encapsulation, inheritance, and polymorphism in programming?"}, "options": [{"index": 0, "value": "Encapsulation enhances user interface design, inheritance creates redundant code, and polymorphism enforces strict type checking."}, {"index": 1, "value": "Encapsulation increases execution speed, inheritance reduces memory usage, and polymorphism simplifies syntax."}, {"index": 2, "value": "Encapsulation protects data integrity, inheritance promotes code reuse, and polymorphism allows for flexible interactions."}, {"index": 3, "value": "Encapsulation allows for global access, inheritance eliminates the need for functions, and polymorphism restricts object interactions."}], "answerIndex": 2}]