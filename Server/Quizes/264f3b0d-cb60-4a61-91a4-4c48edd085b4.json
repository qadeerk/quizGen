[{"question": "What does Object-Oriented Programming (OOP) focus on in software design?", "options": [{"index": 0, "value": "OOP is primarily concerned with optimizing code for performance."}, {"index": 1, "value": "OOP emphasizes the use of global variables in programming."}, {"index": 2, "value": "OOP focuses on organizing software design around data or objects."}, {"index": 3, "value": "OOP focuses on organizing software design around functions and procedures."}], "answerIndex": 2}, {"question": "What are the key principles of Object-Oriented Programming (OOP)?", "options": [{"index": 0, "value": "Compilation, interpretation, execution, and debugging"}, {"index": 1, "value": "Data structures, algorithms, recursion, and iteration"}, {"index": 2, "value": "Encapsulation, inheritance, polymorphism, and abstraction."}, {"index": 3, "value": "Modularity, concurrency, security, and simplicity"}], "answerIndex": 2}, {"question": "What are the main benefits of encapsulation, inheritance, and polymorphism in programming?", "options": [{"index": 0, "value": "Encapsulation allows for global access, inheritance eliminates the need for functions, and polymorphism restricts object interactions."}, {"index": 1, "value": "Encapsulation protects data integrity, inheritance promotes code reuse, and polymorphism allows for flexible interactions."}, {"index": 2, "value": "Encapsulation increases execution speed, inheritance reduces memory usage, and polymorphism simplifies syntax."}, {"index": 3, "value": "Encapsulation makes code harder to read, inheritance creates duplicate code, and polymorphism limits functionality."}], "answerIndex": 1}]