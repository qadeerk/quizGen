[{"question": "What does Object-Oriented Programming (OOP) focus on in software design?", "options": [{"index": 0, "value": "OOP is primarily concerned with the speed of code execution."}, {"index": 1, "value": "OOP focuses on organizing software design around functions and procedures."}, {"index": 2, "value": "OOP focuses on organizing software design around data or objects."}, {"index": 3, "value": "OOP emphasizes the use of global variables in programming."}], "answerIndex": 2}, {"question": "What are the key principles of Object-Oriented Programming (OOP)?", "options": [{"index": 0, "value": "Encapsulation, inheritance, polymorphism, and abstraction."}, {"index": 1, "value": "Procedural programming, functional programming, logic programming, and event-driven programming"}, {"index": 2, "value": "Modularity, concurrency, data flow, and recursion"}, {"index": 3, "value": "Static typing, dynamic typing, strong typing, and weak typing"}], "answerIndex": 0}, {"question": "What are the main benefits of encapsulation, inheritance, and polymorphism in programming?", "options": [{"index": 0, "value": "Encapsulation makes code more complex, inheritance limits functionality, and polymorphism restricts method overriding."}, {"index": 1, "value": "Encapsulation protects data integrity, inheritance promotes code reuse, and polymorphism allows for flexible interactions."}, {"index": 2, "value": "Encapsulation increases the speed of execution, inheritance reduces memory usage, and polymorphism simplifies syntax."}, {"index": 3, "value": "Encapsulation allows for multiple inheritance, inheritance prevents code duplication, and polymorphism enforces strict type checking."}], "answerIndex": 1}]