[
    {
        "question": "What does Object-Oriented Programming (OOP) focus on in software design?",
        "options": [
            {
                "index": 0,
                "value": "OOP focuses on organizing software design around functions and procedures."
            },
            {
                "index": 1,
                "value": "OOP is primarily concerned with the speed of code execution."
            },
            {
                "index": 2,
                "value": "OOP focuses on organizing software design around data or objects."
            },
            {
                "index": 3,
                "value": "OOP emphasizes the use of global variables in programming."
            }
        ],
        "answerIndex": 2
    },
    {
        "question": "What are the key principles of Object-Oriented Programming (OOP)?",
        "options": [
            {
                "index": 0,
                "value": "Data structures, algorithms, recursion, and iteration"
            },
            {
                "index": 1,
                "value": "Encapsulation, inheritance, polymorphism, and abstraction."
            },
            {
                "index": 2,
                "value": "Procedural programming, functional programming, reactive programming, and event-driven programming"
            },
            {
                "index": 3,
                "value": "Modularity, concurrency, security, and simplicity"
            }
        ],
        "answerIndex": 1
    },
    {
        "question": "What are the main benefits of encapsulation, inheritance, and polymorphism in programming?",
        "options": [
            {
                "index": 0,
                "value": "Encapsulation makes code harder to read, inheritance creates duplicate code, and polymorphism limits the use of objects."
            },
            {
                "index": 1,
                "value": "Encapsulation allows for global access to data, inheritance eliminates the need for functions, and polymorphism restricts object interactions."
            },
            {
                "index": 2,
                "value": "Encapsulation protects data integrity, inheritance promotes code reuse, and polymorphism allows for flexible interactions."
            },
            {
                "index": 3,
                "value": "Encapsulation increases execution speed, inheritance reduces memory usage, and polymorphism simplifies syntax."
            }
        ],
        "answerIndex": 2
    }
]